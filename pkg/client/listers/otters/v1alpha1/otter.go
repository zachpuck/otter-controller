// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zachpuck/otter-controller/pkg/apis/otters/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OtterLister helps list Otters.
type OtterLister interface {
	// List lists all Otters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Otter, err error)
	// Otters returns an object that can list and get Otters.
	Otters(namespace string) OtterNamespaceLister
	OtterListerExpansion
}

// otterLister implements the OtterLister interface.
type otterLister struct {
	indexer cache.Indexer
}

// NewOtterLister returns a new OtterLister.
func NewOtterLister(indexer cache.Indexer) OtterLister {
	return &otterLister{indexer: indexer}
}

// List lists all Otters in the indexer.
func (s *otterLister) List(selector labels.Selector) (ret []*v1alpha1.Otter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Otter))
	})
	return ret, err
}

// Otters returns an object that can list and get Otters.
func (s *otterLister) Otters(namespace string) OtterNamespaceLister {
	return otterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OtterNamespaceLister helps list and get Otters.
type OtterNamespaceLister interface {
	// List lists all Otters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Otter, err error)
	// Get retrieves the Otter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Otter, error)
	OtterNamespaceListerExpansion
}

// otterNamespaceLister implements the OtterNamespaceLister
// interface.
type otterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Otters in the indexer for a given namespace.
func (s otterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Otter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Otter))
	})
	return ret, err
}

// Get retrieves the Otter from the indexer for a given namespace and name.
func (s otterNamespaceLister) Get(name string) (*v1alpha1.Otter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("otter"), name)
	}
	return obj.(*v1alpha1.Otter), nil
}
